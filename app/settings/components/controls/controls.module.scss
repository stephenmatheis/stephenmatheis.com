@use 'sass:string';
@use 'sass:math';
@use 'styles/utilities';

// TODO: Move to exports.module.scss
$colors: (
    'primary',
    'secondary',
    'tertiary',
    'accent',
    'background-color',
    'color'
);

.controls {
    width: 100%;
    display: grid;
    grid-template-columns: max-content auto;
    gap: calc(var(--line-height) * 2) 4ch;

    @media (max-width: utilities.$small-width) {
        display: block;
    }

    .spacer {
        margin-bottom: calc(var(--line-height) * 2);
    }

    .label {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        height: calc(var(--line-height) + 6px);
        color: var(--primary);

        @media (max-width: utilities.$small-width) {
            justify-content: flex-start;
            margin-bottom: var(--line-height);

            &:not(:nth-of-type(3)) {
                margin-top: calc(var(--line-height) * 2);
            }
        }
    }

    .group {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 4ch;

        &[data-dark-theme=''],
        &[data-light-theme=''] {
            color: transparent;
        }

        @media (max-width: utilities.$small-width) {
            display: block;
            overflow: hidden;
        }

        .colors {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            height: 100%;
            width: 100%;
            gap: 1ch;

            @media (max-width: utilities.$small-width) {
                margin-top: var(--line-height);
                padding-bottom: var(--line-height);
            }

            .color-group {
                flex: 1;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: space-evenly;
                flex-basis: calc(50% - 2ch);
                color: var(--toggle-background-color);
                border: solid 1px transparent;
                transition: all var(--prefers-color-scheme-transition-speed)
                    ease-in-out;

                // @media (max-width: utilities.$small-width) {
                //     display: block;
                //     flex-direction: row;
                // }

                @each $color in $colors {
                    &:has(.color-block.#{$color}) {
                        background-color: var(
                            --toggle-#{$color},
                            var(--primary-20)
                        );

                        .color-text {
                            .hex {
                                &::after {
                                    content: var(--toggle-#{$color}-string);
                                }
                            }
                        }
                    }
                }

                &:has(.color-block.background-color) {
                    border-color: var(--toggle-primary-50);
                    color: var(--toggle-color);

                    * {
                        color: var(--toggle-color);
                    }
                }

                .color-label {
                    text-align: center;

                    @media (max-width: utilities.$small-width) {
                        padding: 0px;
                        margin-bottom: var(--line-height);
                    }
                }

                .color-block {
                    display: grid;
                    align-items: center;
                    color: var(--toggle-background-color);
                    transition: all var(--prefers-color-scheme-transition-speed)
                        ease-in-out;

                    // @media (max-width: utilities.$small-width) {
                    //     height: calc(var(--line-height) * 4);
                    // }

                    .color-text {
                        text-align: center;

                        .hex {
                            position: relative;
                            text-align: center;

                            .placeholder {
                                color: transparent;
                            }

                            &::after {
                                content: '';
                                position: absolute;
                                top: 0px;
                                left: 0px;
                                width: 100%;
                                height: 100%;
                            }
                        }
                    }
                }
            }
        }

        .font-example {
            display: flex;
            align-items: center;
            justify-content: center;
            flex: 1;
            padding: var(--line-height) 4ch;

            p {
                text-align: left;

                &.right {
                    text-align: right;
                }
            }

            p:last-child {
                margin: 0px;
            }
        }
    }
}

.reset-btn-ctr {
    margin-top: calc(var(--line-height) * 3);
    text-align: center;

    .reset {
        cursor: pointer;
        border: none;
        background-color: transparent;
        color: var(--primary);
    }
}
